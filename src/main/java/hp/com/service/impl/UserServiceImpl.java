package hp.com.service.impl;import hp.com.dao.entity.User;import hp.com.dao.repository.UserRepository;import hp.com.dto.request.RequestChangePwd;import hp.com.dto.request.RequestRegisterUser;import hp.com.dto.response.ErrorResponse;import hp.com.exception.RequestParamInvalidException;import hp.com.exception.ResourceExistedException;import hp.com.log.LOG;import hp.com.service.AbstractService;import hp.com.service.UserService;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import org.springframework.util.StringUtils;import java.util.Optional;@Servicepublic class UserServiceImpl extends AbstractService implements UserService {    @Autowired    private UserRepository userRepository;    @Override    public Optional<User> register(RequestRegisterUser newUser) {        String message = validator.validateRequestThenReturnMessage(newUser);        if (StringUtils.hasText(message)) {            LOG.errorFile(newUser.toString() + message);            throw new RequestParamInvalidException(message);        }        if (userRepository.existsById(newUser.getUsername())) {            LOG.errorFile("register failed because username existed: " + newUser.getUsername());            throw new ResourceExistedException("username existed!");        }        LOG.infoFile("register new user " + newUser.getUsername());        User user = userRepository.save(toUserEntity(newUser));        return Optional.of(user);    }    @Override    public Optional<User> changPassword(RequestChangePwd userToChangePwd) {        return Optional.empty();    }    User toUserEntity(RequestRegisterUser registerUser) {        User user = new User();        user.setUsername(registerUser.getUsername());        user.setName(registerUser.getName());        user.setEmailAddress(registerUser.getEmailAddress());        user.setPassword(registerUser.getPassword());        user.setPhoneNumber(registerUser.getPhoneNumber());        user.setTotalMoney(0);        return user;    }}