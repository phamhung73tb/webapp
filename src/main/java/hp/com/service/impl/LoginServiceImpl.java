package hp.com.service.impl;import hp.com.config.JwtTokenProvider;import hp.com.dao.entity.User;import hp.com.dao.repository.UserRepository;import hp.com.dto.response.LoginResponse;import hp.com.dto.request.RequestLogin;import hp.com.exception.RequestParamInvalidException;import hp.com.exception.ResourceNotFoundException;import hp.com.log.LOG;import hp.com.service.AbstractService;import hp.com.service.LoginService;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.security.authentication.AuthenticationManager;import org.springframework.stereotype.Service;import org.springframework.util.StringUtils;import java.util.Optional;/** * service for user login. * * @author Pham Van Hung */@Servicepublic class LoginServiceImpl extends AbstractService implements LoginService {    @Autowired    public AuthenticationManager authenticationManager;    @Autowired    public JwtTokenProvider tokenProvider;    @Autowired    private UserRepository userRepository;    @Override    public Optional<LoginResponse> login(RequestLogin request) {        String message = validator.validateRequestThenReturnMessage(request);        if (StringUtils.hasText(message)) {            LOG.errorFile(request.toString() + message);            throw new RequestParamInvalidException(message);        }        User userLogin = userRepository                .findByUsernameAndPassword(request.getUsername(), request.getPassword())                .orElseThrow(() -> {                    LOG.errorFile(request.toString() + " is incorrect");                    throw new ResourceNotFoundException("Username and password are incorrect!");                });        Optional<User> userOptional = Optional.of(userLogin);        LOG.infoFile("username " + userLogin.getUsername() + " logged id");        return userOptional.map(user -> new LoginResponse(                userLogin.getUsername(),                userLogin.getEmailAddress(),                tokenProvider.generateToken(userLogin.getUsername())        ));    }}